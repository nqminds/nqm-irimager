name: Test
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Install pdm
        run: pipx install pdm
      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: 'pdm.lock'
      - name: Set up CPM cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/cpm-cache
          key: ${{ runner.os }}-cpm-${{ hashFiles('./package-lock.cmake') }}
          restore-keys: |
            ${{ runner.os }}-cpm-
      - name: pdm install, using mock libirimager library
        run: pdm install
        env:
          SKBUILD_CMAKE_ARGS: "-DIRImager_mock=ON"
          CPM_SOURCE_CACHE: ~/.cache/cpm-cache
      - name: Run pre-commit checks
        env:
          # SKIP `no-commit-to-branch`, otherwise CI on `main` will fail,
          # see https://github.com/pre-commit/pre-commit-hooks/issues/265
          SKIP: "no-commit-to-branch"
        run: pdm run pre-commit run --show-diff-on-failure --color=always
      - name: Check whether nqm.irimager stubs match implementation
        env:
          MYPYPATH: src
        run: |
          stubtest_output="$(pdm run stubtest nqm.irimager || true)"
          if echo $stubtest_output \
            | grep '^error' \
            | grep --invert-match 'error: nqm.irimager.IRImager is inconsistent, metaclass differs'; then

            echo "::error ::Stubtest returned unexpected errors, ${stubtest_output}"
            exit 1
          else
            # no unexpected errors
            exit 0
          fi
      - name: Test with pytest
        run: pdm run pytest

  dev-container:
    name: Test and build the dev-container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and run Dev Container task
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository_owner }}/nqm-irimager-devcontainer
          cacheFrom: ghcr.io/${{ github.repository_owner }}/nqm-irimager-devcontainer
          # only push new image if this is a on the `main` branch
          refFilterForPush: "refs/heads/main"
          runCmd: |
            pdm install
            pdm run pytest
