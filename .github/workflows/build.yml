# SPDX-License-Identifier: BSD-2-Clause
# SPDX-FileCopyrightText: Copyright (c) 2017-2019, Joe Rickerby and contributors. All rights reserved.

name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_BEFORE_ALL_LINUX: |
            set -e # exit on error
            ARCH="$(uname -m)" # convert the Linux arch to Debian ABI arch
            case $ARCH in
              armv5*) ARCH="armv5";;
              armv6*) ARCH="armv6";;
              armv7*) ARCH="arm";;
              aarch64) ARCH="arm64";;
              x86) ARCH="386";;
              x86_64) ARCH="amd64";;
              i686) ARCH="386";;
              i386) ARCH="386";;
            esac
            dnf install epel-release wget systemd-devel libusb1-devel --assumeyes
            dnf install alien --assumeyes
            wget "http://ftp.evocortex.com/libirimager-4.1.1-${ARCH}.deb"
            alien --to-rpm "./libirimager-4.1.1-${ARCH}.deb"
            # the auto-generated RPM made by alien is kinda buggy, so we need
            # to use --replacefiles to avoid rpm throwing an error
            rpm --install --replacefiles ./libirimager-4.1.1-*.rpm

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        # To test: repository_url: https://test.pypi.org/legacy/
